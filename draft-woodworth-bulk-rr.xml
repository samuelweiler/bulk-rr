<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC2317 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2317.xml">
<!ENTITY RFC3597 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3597.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC5234 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<rfc ipr="trust200902" docName="draft-woodworth-bulk-rr-07" category="std" updates="2308, 4033, 4034, 4035">

  <front>
    <title abbrev="BULK RR">BULK DNS Resource Records</title>

    <author initials="J." surname="Woodworth" fullname="John Woodworth">
      <organization>CenturyLink, Inc.</organization>
      <address>
        <postal>
          <street>4250 N Fairfax Dr</street>
          <city>Arlington</city>
          <code>VA 22203</code>
          <country>USA</country>
        </postal>
        <email>John.Woodworth@CenturyLink.com</email>
      </address>
    </author>
    <author initials="D." surname="Ballew" fullname="Dean Ballew">
      <organization>CenturyLink, Inc.</organization>
      <address>
        <postal>
          <street>2355 Dulles Corner Blvd, Ste 200 300</street>
          <city>Herndon</city>
          <code>VA 20171</code>
          <country>USA</country>
        </postal>
        <email>Dean.Ballew@CenturyLink.com</email>
      </address>
    </author>
    <author initials="S." surname="Bindinganaveli Raghavan" fullname="Shashwath Bindinganaveli Raghavan">
      <organization>Hughes Network Systems</organization>
      <address>
        <postal>
          <street>11717 Exploration Lane</street>
          <city>Germantown</city>
          <code>MD 20876</code>
          <country>USA</country>
        </postal>
        <email>shashwath.bindinganaveliraghavan@hughes.com</email>
      </address>
    </author>
    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Cambridge</city>
          <code>MA 02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The BULK DNS resource record type defines a method of pattern-based
creation of DNS resource records based on numeric substrings of query
names.  The intent of BULK is to simplify generic assignments in a
memory-efficient way that can be easily shared between the primary and
secondary nameservers for a zone.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/vttale/bulk-rr&gt;.  The most recent
version of the document, open issues, etc should all be available
here.  The authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The BULK DNS resource record defines a pattern-based method for
on-the-fly resource record generation.  It is essentially an enhanced
wildcard mechanism, constraining generated resource record owner names
to those that match a pattern of variable numeric substrings.  It is
also akin to the $GENERATE master file directive <xref target="bind-arm"/> without
being limited to numeric values and without creating all possible
records in the zone data.</t>

<t>For example, consider the following record:</t>

<figure><artwork><![CDATA[
example.com. 86400 IN BULK A (
                      pool-A-[0-255]-[0-255].example.com.
                      10.55.${1}.${2}
                   )
]]></artwork></figure>

<t>It will answer requests for pool-A-0-0.example.com through
pool-A-255-255.example.com with the IPv4 addresses 10.55.0.0 through
10.55.255.255.</t>

<t>Much larger record sets can be defined while minimizing the associated
requirements for server memory and zone transfer network bandwidth.</t>

<t>This record addresses a number of real-world operational problems that
authoritative DNS service providers experience.  For example,
operators who host many large reverse lookup zones, even for only IPv4
space in in-addr.arpa, would benefit from the disk space, memory size,
and zone transfer efficiencies that are gained by encapsulating a
simple record-generating algorithm versus enumerating all of the
individual records to cover the same space.</t>

<t>Production zones of tens of thousands of pattern-generated records
currently exist, that could be reduced to just one BULK RR.  These
zones can look deceptively small on the primary nameserver and balloon
to 100MB or more when expanded,</t>

<t>BULK also allows administrators to more easily deal with singletons,
records in the pattern space that are an exception to the normal data
generation rules.  Whereas a mechanism like $GENERATE may need to be
adjusted to account for these individual records, the processing rules
for BULK have explicit records more naturally override the dynamically
generated ones.  This collision problem is not just a theoretical
concern, but a real source of support calls for providers.</t>

<t>Pattern-generated records are also not only for the reverse DNS
space.  Forward zones also occasionally have entries that follow
patterns that would be well-addressed by the BULK RR.</t>

<section anchor="background-and-terminology" title="Background and Terminology">

<t>The reader is assumed to be familiar with the basic DNS and DNSSEC
concepts described in <xref target="RFC1034"/>, <xref target="RFC1035"/>, <xref target="RFC4033"/>,
<xref target="RFC4034"/>, and <xref target="RFC4035"/>; subsequent RFCs that update them in
<xref target="RFC2181"/> and <xref target="RFC2308"/>; and DNS terms in <xref target="RFC7719"/>.</t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
<xref target="RFC2119"/> when, and only when, they appear in all capitals, as shown
here.</t>

</section>
</section>
<section anchor="the-bulk-resource-record" title="The BULK Resource Record">

<t>The BULK resource record enables an authoritative nameserver to
generate RRs for other types based upon the query received.</t>

<t>The Type value for the BULK RR type is TBD.</t>

<t>The BULK RR is class-independent.</t>

<section anchor="bulk-rdata-wire-format" title="BULK RDATA Wire Format">

<t>The RDATA for a BULK RR is as follows:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Match Type          |                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+       Domain Name Pattern     /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                                                               /
/                      Replacement Pattern                      /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Match Type identifies the type of the RRset to be generated by this
BULK record.  It is two octets corresponding to an RR TYPE code as
specified in <xref target="RFC1035"/>, Section 3.2.1.</t>

<t>Domain Name Pattern consists of a pattern encoded as a wire-format
fully qualified domain name.  The full name is used so that numeric
substrings above the zone cut can be captured in addition to those in
the zone.  It needs no length indicator for the entire field because
the root label marks its end.</t>

<t>Special characters are interpreted as per the following Augmented
Backus-Naur Form (ABNF) notation from <xref target="RFC5234"/>.</t>

<figure><artwork><![CDATA[
match         =  1*(range / string)

range         =  "[" [decnum "-" decnum] "]" /
                  "<" [hexnum "-" hexnum] ">"
                      ; create references for substitution
                      ; limit of 32 references
                      ; [] is syntactic sugar for 0-255
                      ; <> is syntactic sugar for 00-ff

string        =  1*(ctext / quoted-char)

decnum        =  1*decdigit
                      ; constrained to 65535 maximum.

hexnum        =  1*hexdigit
                      ; constrained to ffff maximum.

octet         =  %x00-FF

decdigit      =  %x30-39
                      ; 0-9
hexdigit      =  decdigit / 0x41-0x46 / 0x61-66
                      ; 0-9, A-F, a-f

ctext         =  <any octet excepting "\">

quoted-char   = "\" octet
                       ; to allow special characters as literals
]]></artwork></figure>

<t>Interpretation of the Domain Name Pattern is described in detail in
the "BULK Replacement" section.  Note that quoted-char must be stored
in the wire format to preserve its semantics when the BULK RR is
interpreted by nameservers.</t>

<t>The limit of 32 references is meant to simplify implementation
details.  It is largely but not entirely arbitrary, as it could
capture every individual character of the text representation of a
full IPv6 address.</t>

<t>Replacement Pattern describes how the answer RRset MUST be generated
for the matching query.  It needs no length indicator because its end
can be derived from the RDATA length minus Match Type and Domain Name
Pattern lengths.  It uses the following additional ABNF elements:</t>

<figure><artwork><![CDATA[
replace       =   1*(reference / string)

reference     =   "$" "{" (positions / "*") [options] "}"

positions     =   (position / posrange) 0*("," (position / posrange))

posrange      =   position "-" position

position      =   1*decnum

options       =   delimiter [interval [padding]]

delimiter     =   "|" 0*(ctext | quoted-char)
                        ; "\|" to use "|" as delimiter
                        ; "\\" to use "\" as delimiter

interval      =   "|" *2decdigit

padding       =   "|" *2decdigit

]]></artwork></figure>

<t>[ Is the formatting complexity beyond simple ${1}, ${2}, etc, really
worth it?  I definitely see how it could make for shorter replacement
patterns, but does it enhance their clarity and usability, adding a
feature someone really wants? ]</t>

<t>The Replacement Pattern MUST end in the root label if it is intended
to represent a fully qualified domain name.</t>

</section>
<section anchor="the-bulk-rr-presentation-format" title="The BULK RR Presentation Format">

<t>Match Type is represented as an RR type mnemonic or with <xref target="RFC3597"/>'s
generic TYPE mechanism.</t>

<t>Domain Name Pattern is represented as a fully qualified domain name as
per <xref target="RFC1035"/> Section 5.1 rules for encoding whitespace and
other special characters.</t>

<t>Replacement Pattern is represented by the standard &lt;character-string&gt;
text rules for master files as per <xref target="RFC1035"/> section 5.1.</t>

<t>It is suggested that lines longer than 80 characters be wrapped with
parenthetical line continuation, per <xref target="RFC1035"/> Section 5.1, starting
after Match Type and ending after Replacement Pattern.</t>

</section>
</section>
<section anchor="bulk-replacement" title="BULK Replacement">

<t>When a BULK-aware authoritative nameserver receives a query for which
it does not have a matching name or a covering wildcard, it MUST then
look for BULK RRs at the zone apex, selecting all BULK RRs with a
Match Type that matches the query type and a Domain Name Pattern that
matches the query name.  Note that query type ANY will select all
Match Types, and all query types match a CNAME or DNAME Match Type.
One or more answer RRs will be generated per the replacement rules
below.  Examples are provided in an appendix.</t>

<t>By only triggering the BULK algorithm when the query name does not
exist, administrators are given the flexibility to explicitly override
the behaviour of specific names that would otherwise match the BULK
record's Domain Name Pattern.  This is unlike BIND's $GENERATE
directive, which adds the generated RRs to any existing names.</t>

<section anchor="matching-the-domain-name-pattern" title="Matching the Domain Name Pattern">

<t>A query name matches the Domain Name Pattern if the characters that
appear outside the numeric ranges match exactly and those within
numeric ranges have values that fall within the range.  Numeric
matches MUST be of the appropriate decimal or hexadecimal type as
specified by the delimiters in the pattern.  For example, if a range
is given as [0-255], then FF does not match even though its value as
a hexadecimal number is within the range.  Leading zeros in the
numeric part(s) of the qname MUST be ignored; for example,
001.example.com, 01.example.com and 1.example.com would all match
[].example.com.</t>

<t>When a query name matches a Domain Name Pattern, the value in each
numeric range is stored for use by the Replacement Pattern, with
reference numbers starting at 1 and counting from the left.  For
example, matching the query name host-24-156 against
host-[0-255]-[0-255] assigns 24 to ${1} and 156 to ${2}.</t>

</section>
<section anchor="record-generation-using-replacement-pattern" title="Record Generation using Replacement Pattern">

<t>The Replacement Pattern generates the record data by replacing the
${&#8230;} references with data captured from the query name, and copying
all other characters literally.</t>

<t>The simplest form of reference uses only the reference number between
the braces, "{" and "}".  The value of the reference is simply
copied directly from the matching position of the query name.</t>

<t>The next form of reference notation uses the asterisk, "*".  With
${*}, all captured values in order of ascending position, delimited by
its default delimiter (described below), are placed in the answer.</t>

<t>Numeric range references, such as ${1-4}, replaces all values captured
by those references, in order, delimited by the default delimiter
described below.  To reverse the order in which they are copied,
reverse the upper and lower values, such as ${4-1}.  This is useful
for generating PTR records from query names in which the address is
encoded in network order.</t>

<t>Similar to range references, separating positions by commas creates
sets for replacement. For example, ${1,4} would be replaced by the
first and fourth captured values, delimited its default delimiter.
This notation may be combined with the numeric range form, such as 
${3,2,1,8-4}.</t>

<section anchor="delimiters" title="Delimiters">

<t>A reference can specify a delimiter to use by following a vertical
bar, "|", with zero or more characters.  Zero characters, such as in
${1-3|}, means no delimiter is used, while other characters up to an
unescaped vertical bar or closing brace are copied between position
values in the replacement.  The default delimiter is the hyphen, "-".</t>

</section>
<section anchor="delimiter-intervals" title="Delimiter intervals">

<t>A second vertical bar in the reference options introduces a delimiter
interval.  The default behavior of a multi-position reference is to
combine each captured value specified with a delimiter between each.
With a delimiter interval the delimiters are only added between every
Nth value.  For example, ${*|-|4} adds a hyphen between every group of
four captured positions.  This can be a handy feature in the IPv6
reverse namespace where every nibble is captured as a separate value
and generated hostnames include sets of 4 nibbles.  An empty or 0
value for the delimiter interval MUST be interpreted as the default
value of 1.</t>

</section>
<section anchor="padding-length" title="Padding length">

<t>The fourth and final reference option determines the field width of
the copied value.  Shorter values MUST be padded with leading zeroes
("0") and longer values MUST be truncated to the width.</t>

<t>The default behavior, and that of an explicit empty padding length, is
that the captured query name substring is copied exactly.  A width of
zero "0" is a signal to "unpad", and any leading zeros MUST be
removed. [ Unnecessary complexity? ]</t>

<t>If a delimiter interval greater than 1 is used, captured values
between the intervals will be concatenated and the padding or
unpadding applied as a unit and not individually.  An example of this
would be ${*||4|4} which would combine each range of 4 captured values
and pad or truncate them to a width of 4 characters.</t>

<t>[ If this is kept, the element/feature should probably be renamed
from "padding" since it is just as likely to truncate. ]</t>

</section>
<section anchor="final-processing" title="Final processing">

<t>The string that results from all replacements is converted to the
appropriate RDATA format for the record type.  If the conversion
fails, the SERVFAIL rcode MUST be set on the response, representing a
misconfiguration that the server was unable to perform. [
The EDNS extended-error code would be useful here. ]</t>

<t>The TTL of each RR generated by a BULK RR is the TTL of the
corresponding BULK record itself.  [ BULK should probably have its
own TTL field because using that of the record itself feels like bad
design.  On the other hand, if BULK is never meant to be queried for
directly and only appears in authoritative data, its own TTL is pretty
useless normally. ]</t>

<t>The class for the RRSet is the class of the BULK RR.</t>

<t>If the generated record type is one that uses domain names in its
resource record data, such as CNAME, a relative domain names MUST be
fully qualified with the origin domain of the BULK RR.</t>

</section>
</section>
</section>
<section anchor="known-limitations" title="Known Limitations">

<t>This section defines known limitations of the BULK resource type.</t>

<section anchor="unsupported-nameservers" title="Unsupported Nameservers">

<t>Authoritative nameservers that do not understand the semantics of the
new record type will not be able to deliver the intended answers even
when the type appears in their zone data This significantly affects
the interoperability of primary versus secondary authorities that are
not all running the same software.  Adding new RRs which affect
handling by authoritative servers, or being unable to add them, is an
issue that needs to be explored more thoroughly within dnsop.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Two known security considerations exist for the BULK resource record,
DNSSEC and DDOS attack vectors.</t>

<section anchor="dnssec-signature-strategies" title="DNSSEC Signature Strategies">

<t>DNSSEC was designed to provide validation for DNS resource records,
requiring each tuple of owner, class, and type to have its own
signature.  This essentially defeats the purpose of providing large
generated blocks of RRs in a single RR as each generated RR would
require its own legitimate RRSIG record.</t>

<t>In the following sections several options are discussed to address
this issue.  Of the options, on-the-fly provides the most secure
solution and NPN provides the most flexible.</t>

<section anchor="on-the-fly-signatures" title="On-the-fly Signatures">

<t>A significant design goal of DNSSEC was to be able to do offline
cryptographic signing of zone contents, keeping the key material more
secure.</t>

<t>On-the-fly processing requires authoritative nameservers to sign
generated records as they are created.  Not all authoritative
nameserver implementations offer on-the-fly signatures, and even with
those that do not all operators will want to keep signing keys online.
This solution would either require all implementations to support
on-the-fly signing or be ignored by implementations which can not or
will not comply.</t>

<t>One possibly mitigation for addressing the risk of keeping the zone
signing key online would be to continue to keep the key for signing
positive answers offline and introduce a second key for online signing
of negative answers.</t>

<t>No changes to validating resolvers is required to support this
solution.</t>

</section>
<section anchor="alternative-signature-scheme" title="Alternative Signature Scheme">

<t>Previous versions of this draft proposed a new signature scheme using
a Numeric Pattern Normalization (NPN) RR.  It was a method to support
offline signatures for BULK records, with the drawback that is
required updates to DNSSEC-aware resolvers.</t>

<t>That mechanism is not specific to BULK and has been removed from the
current draft.  If there is further interest in pursuing it, it can be
reopened as a separate draft.</t>

</section>
<section anchor="non-dnssec-zone-support-only" title="Non-DNSSEC Zone Support Only">

<t>As a final option zones which wish to remain entirely without DNSSEC
support may serve such zones without either of the above solutions and
records generated based on BULK RRs will require zero support from
recursive resolvers.</t>

</section>
</section>
<section anchor="ddos-attack-vectors-and-mitigation" title="DDOS Attack Vectors and Mitigation">

<t>As an additional defense against Distributed Denial Of Service (DDOS)
attacks against recursive (resolving) nameservers it is highly
recommended shorter TTLs be used for BULK RRs than others.  While
disabling caching with a zero TTL is not recommended, as this would
only result in a shift of the attack target, a balance will need to be
found.  While this document uses 24 hours (86400 seconds) in its
examples, values between 300 to 900 seconds are likely more
appropriate and is RECOMMENDED.  What is ultimately deemed appropriate
may differ from zone to zone and administrator to administrator.</t>

<t>[ I am unclear how this helps DDOS mitigation against anyone at all,
and suspect this section should be removed.. ]</t>

</section>
<section anchor="implications-of-large-scale-dns-records" title="Implications of Large-Scale DNS Records">

<t>The production of such large-scale records in the wild may have some
unintended side-effects.  These side-effects could be of concern or
add unexpected complications to DNS based security offerings or
forensic and anti-spam measures.  While outside the scope of this
document, implementers of technology relying on DNS resource records
for critical decision making must take into consideration how the
existence of such a volume of records might impact their technology.</t>

<t>Solutions to the magnitude problem for BULK generated RRs are expected
be similar if not identical to that of existing wildcard records, the
core difference being the resultant RDATA will be unique for each
requested Domain Name within its scope.</t>

<t>The authors of this document are confident that by careful
consideration, negative_side-effects produced by implementing the
features described in this document can be eliminated from any such
service or product.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>The BULK record does not introduce any new privacy concerns to DNS
data.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>IANA is requested to assign numbers for the BULK RR.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>This document was created as an extension to the DNS
infrastructure. As such, many people over the years have contributed
to its creation and the authors are appreciative to each of them even
if not thanked or identified individually.</t>

<t>A special thanks is extended for the kindness, wisdom and technical
advice of Robert Whelton (CenturyLink, Inc.) and Gary O'Brien
(Secure64 Software Corp).</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1034;
&RFC1035;
&RFC2119;
&RFC2181;
&RFC2308;
&RFC2317;
&RFC3597;
&RFC4033;
&RFC4034;
&RFC4035;
&RFC5234;


    </references>

    <references title='Informative References'>

&RFC7719;
<reference anchor="bind-arm" target="https://ftp.isc.org/isc/bind9/cur/9.9/doc/arm/Bv9ARM.html">
  <front>
    <title>BIND 9 Configuration Reference</title>
    <author >
      <organization>Internet Systems Consortium</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>


    </references>


<section anchor="bulk-examples" title="BULK Examples">

<section anchor="example-1" title="Example 1">

<figure><artwork><![CDATA[
$ORIGIN 2.10.in-addr.arpa.
@ 86400 IN BULK PTR (
          [0-255].[0-255].[0-255].[0-255].in-addr.arpa.
          pool-${4-1}.example.com.
        )
]]></artwork></figure>

<t>A query received for the PTR of 4.3.2.10.in-addr.arpa will create the
references ${1} through ${4} with the first four labels of the query
name.  The ${4-1} reference in the replacement pattern will then
substitute them in reverse with the default delimiter of hyphen
between every character and no special field width modifications.  The
TTL of the BULK RR is used for the generated record, making the
response:</t>

<figure><artwork><![CDATA[
4.3.2.10.in-addr.arpa 86400 IN PTR pool-10-2-3-4.example.com.
]]></artwork></figure>

</section>
<section anchor="example-2" title="Example 2">

<figure><artwork><![CDATA[
$ORIGIN 2.10.in-addr.arpa.
@ 86400 IN BULK PTR (
          [0-255].[0-255].[0-255].[0-255].in-addr.arpa.
          pool-${2,1|||3}.example.com.
        )
]]></artwork></figure>

<t>Example 2 is similar to Example 1, except that it modifies the
replacement pattern.  The empty option after the first
vertical bar causes no delimiters to be inserted, while the second
empty option that would keep the delimiter interval as 1.  The latter
is relevant because the final value, padding of 3, is applied over
each delimiter interval even when no delimiter is used.  Not all
captures from the substring are required to be used in the response.</t>

<t>The result is that a query for the PTR of 4.3.2.10.in-addr.arpa
generates this response:</t>

<figure><artwork><![CDATA[
4.3.2.10.in-addr.arpa 86400 IN PTR pool-003004.example.com.
]]></artwork></figure>

<t>[ Admittedly you can't do this very effectively without the field
width complexity. Is this sort of name common?  Does it need support?
Admittedly $GENERATE had the feature, but is that reason enough? ]</t>

<t>[ Change this to a hex matching example? ]</t>

</section>
<section anchor="example-3" title="Example 3">

<t>This example contains a classless IPv4 delegation on the /22 CIDR
boundary as defined by <xref target="RFC2317"/>.  The network for this example is
"10.2.0/22" delegated to a nameserver "ns1.sub.example.com.". RRs for
this example are defined as:</t>

<figure><artwork><![CDATA[
$ORIGIN 2.10.in-addr.arpa.
@    7200 IN BULK CNAME [0-255].[0-3] ${*|.}.0-3
0-3 86400 IN NS ns1.sub.example.com.
]]></artwork></figure>

<t>A query for the PTR of 25.2.2.10.in-addr.arpa is received and the BULK
record with the CNAME Match Type matches all query types.  25 and 2
are captured as references, and joined in the answer by the period
(".") character as a delimiter, with ".0-3" then appended literally
and fully qualified by the origin domain.  The final synthesized
record is:</t>

<figure><artwork><![CDATA[
25.2.2.10.in-addr.arpa 7200 IN CNAME 25.2.0-3.2.10.in-addr.arpa.
]]></artwork></figure>

<t>[ Without $* and options complexity, the pattern to get the same
result is just ${1}.{$2}.0-3 which is not really significantly onerous
to enter, and slightly less arcane looking to comprehend. ]</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAFoJ9FkAA8V8bXfbRpLu9/4VfTjZM3YuSVNvduzJTUa27Ix3bdlXciZn
NvaZA5JNESsQYNCAZMbW/vatp6q60aAoe2bnw3ViiwIbjerqqqdeG6PRyDR5
U7gn9unPr/7Dnpye2zPnq7aeOfowq+q5N9l0WrsrHXF2ZubVrMxWdMu8zhbN
6Lqq5tdV3SxH07a4HNX1aPLIzLOGBuxP9h4Zk6/rJ7apW9/sTyaPJ/smq132
xL4sG1eXrjHXF0/w4Ddv7S9VfZmXF/anumrX5vK6GzQ6wbPMLGueWN/MTbvG
Ezw94mDy3dAeTg4O+N9D/vfImFk1p5me2NaPMj/Lc7POnxhrR7apZvzTb1a1
W3j5TOTzLyZrm2VV80j6a21e0jP+fUyU6SL5qiz/36tlufVFVdMjn7myaevN
q7y8HNICZmP+ytMTHFF/uH80saf2RZbXi+yjPan521nebJ7Y47ogopuqlGvV
nJ7y12O7v78/OdBLbdnUNPLn82O+4FZZXggp40jKnxMKxrNqZfrLORnbp1lR
uOtkLScuK9Or/8BC9g+OjuxJS7d4+6yiTart0+JqPrTnjaOdn9iDySRZ219o
H+e3VkYCsvfFlYGwsRD2lWWd07LyErueldmVK3J7ll0ss6usTNZ5vsz88jpr
ll8cy6v/S3uxpKWduoaYemnPN75xK99jwR5R/8g+/7guqjpr8qq0r7LSJYv+
ydWrrGyq63Tdr09o3d89evjFdftA6HjaI7RWOv+8ZPJ2bu+zMdFxXbty5tIt
zq7yuX3W/4pXenyZ0UPtOzdbllVRXeRua5kksU/rKptfZ5tkcc+y1bTO5xcu
XduxnezvHe6P9iZHh19cYJMV7s8ZP1kWUVbEqya/ctC+ejHbI23uPh7px/29
vcfx43d74SOhQPy490g/Hhw9Dh8BEN3Hw+5jmPdoH1dNXi62yHj0SB6IbRhl
9eoJLyKA5svTE/uYxL9c5BetysCZW7iOwx2iRH4HUAsyhfsBQXm74mERPEVE
mqy+wDYsm2btnzx4sGjW49zPxjTXA/r5AJQ9fjBr6wePx48fEDo/IDIfPL16
fHz2erxsVoUxo9HIZlPaz2zWGPNu6Tq4rwPc1wz3ttmsnZ27RV6S8Gd25Yj8
ua0Wdp01IHs0zbybmxlhOK+Wvtkxjbc8zNKAsl25Op9Z34IAkmSPe35rXb0x
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
N+zp20FAXO2WeHkFMOF/ALgsRAG2XAAA

-->

</rfc>

